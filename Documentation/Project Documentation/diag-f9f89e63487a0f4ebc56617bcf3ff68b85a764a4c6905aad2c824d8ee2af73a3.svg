<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="560px" preserveAspectRatio="none" style="width:714px;height:560px;background:#FFFFFF;" version="1.1" viewBox="0 0 714 560" width="714px" zoomAndPan="magnify"><defs/><g><ellipse cx="357" cy="20" fill="#222222" rx="10" ry="10" style="stroke:#222222;stroke-width:1.0;"/><rect fill="#F1F1F1" height="57.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="665" x="24.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="4" x="34.5" y="71.1387"> </text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="453" x="38.5" y="71.1387">Detect all lvclasses in memory and the project folder recursively</text><line style="stroke:#181818;stroke-width:1.0;" x1="24.5" x2="689.5" y1="78.9688" y2="78.9688"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="645" x="34.5" y="95.1074">This ensures that we don't need any class path anymore. All are solved because they are pre-identied.</text><rect fill="#F1F1F1" height="57.9375" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="470" x="122" y="127.9375"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="4" x="132" y="149.0762"> </text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="289" x="136" y="149.0762">Read the Json InterfaceConfiguration file</text><line style="stroke:#181818;stroke-width:1.0;" x1="122" x2="592" y1="156.9063" y2="156.9063"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="450" x="132" y="173.0449">This file defines all classes needed by the application by name and type</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="458" x="128" y="205.875"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="4" x="138" y="227.0137"> </text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="434" x="142" y="227.0137">Load all classes from the InterfaceConfiguration into memory</text><rect fill="#F1F1F1" height="127.7813" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="506" x="104" y="259.8438"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="4" x="114" y="280.9824"> </text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="449" x="118" y="280.9824">Create the classes that adhere to the ICreateDestroy interface</text><line style="stroke:#181818;stroke-width:1.0;" x1="104" x2="610" y1="288.8125" y2="288.8125"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="418" x="114" y="304.9512">The ICreateDestroy class defines two method: Create and Destroy.</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="486" x="114" y="318.9199">Adhering to this interface enforces that the by reference classes are created</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="181" x="114" y="332.8887">at startup of the application.</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="460" x="114" y="346.8574">This is only necessary for objects where dependency inversion is needed.</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="359" x="114" y="360.8262">You can still use hard linked objects inside other objects.</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="402" x="114" y="374.7949">Then you don't have to inherit from the ICreateDestroy interface</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="486" x="114" y="407.625"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="4" x="124" y="428.7637"> </text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="462" x="128" y="428.7637">Set the class names as defined by the InterfaceConfiguration file</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="692" x="11" y="461.5938"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="4" x="21" y="482.7324"> </text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="668" x="25" y="482.7324">Set the External Interfaces of each of the classes as defined by the InterfaceConfiguration file</text><rect fill="#F1F1F1" height="33.9688" rx="12.5" ry="12.5" style="stroke:#181818;stroke-width:0.5;" width="249" x="232.5" y="515.5625"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="4" x="242.5" y="536.7012"> </text><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="225" x="246.5" y="536.7012">Start the main application class</text><line style="stroke:#181818;stroke-width:1.0;" x1="357" x2="357" y1="30" y2="50"/><polygon fill="#181818" points="353,40,357,50,361,40,357,44" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="357" x2="357" y1="107.9375" y2="127.9375"/><polygon fill="#181818" points="353,117.9375,357,127.9375,361,117.9375,357,121.9375" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="357" x2="357" y1="185.875" y2="205.875"/><polygon fill="#181818" points="353,195.875,357,205.875,361,195.875,357,199.875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="357" x2="357" y1="239.8438" y2="259.8438"/><polygon fill="#181818" points="353,249.8438,357,259.8438,361,249.8438,357,253.8438" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="357" x2="357" y1="387.625" y2="407.625"/><polygon fill="#181818" points="353,397.625,357,407.625,361,397.625,357,401.625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="357" x2="357" y1="441.5938" y2="461.5938"/><polygon fill="#181818" points="353,451.5938,357,461.5938,361,451.5938,357,455.5938" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="357" x2="357" y1="495.5625" y2="515.5625"/><polygon fill="#181818" points="353,505.5625,357,515.5625,361,505.5625,357,509.5625" style="stroke:#181818;stroke-width:1.0;"/><!--MD5=[0e3e48948041aa3bd71a9070cbe0eb36]
@startuml
start

: **Detect all lvclasses in memory and the project folder recursively**
- - - -
This ensures that we don't need any class path anymore. All are solved because they are pre-identied.;
: **Read the Json InterfaceConfiguration file**
- - - -
This file defines all classes needed by the application by name and type;
: **Load all classes from the InterfaceConfiguration into memory**;
: **Create the classes that adhere to the ICreateDestroy interface**
- - - -
The ICreateDestroy class defines two method: Create and Destroy.
Adhering to this interface enforces that the by reference classes are created
at startup of the application.
This is only necessary for objects where dependency inversion is needed.
You can still use hard linked objects inside other objects.
Then you don't have to inherit from the ICreateDestroy interface;
: **Set the class names as defined by the InterfaceConfiguration file**;
: **Set the External Interfaces of each of the classes as defined by the InterfaceConfiguration file**;
: **Start the main application class**;

@enduml

PlantUML version 1.2022.12(Sun Oct 23 18:12:26 GMT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>